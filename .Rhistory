dplyr::select(names(.)[grepl('_mm' , names(.))] )%>%
head(2) %>% kable()
pengiuns %>%
dplyr::select(names(.)[grepl('_mm' , names(.))] )%>%
head(2) %>% kable()
pengiuns %>%
dplyr::select(names(.)[grepl('_mm' , names(.))] )%>%
head(2) %>% kable()
pengiuns %>%
dplyr::select(names(.)[grepl('_mm' , names(.))] )%>%
head(2) %>% kable()
pengiuns %>%
dplyr::select(names(.)[grepl('_mm' , names(.))] )%>%
head(2) %>% kable()
pengiuns %>%
dplyr::select(names(.)[grepl('_mm' , names(.))] )%>%
head(2) %>% kable()
pengiuns %>%
dplyr::select(names(.)[grepl('_mm' , names(.))] )%>%
head(2) %>% kable()
pengiuns %>%
dplyr::select(names(.)[grepl('_mm' , names(.))] )%>%
head(2) %>% kable()
source("~/R/PROJECT ONE/PROJECT ONE_.R", echo=TRUE)
(ggplot(palmerLong ,
aes(x=parameter, y=result, colour=year ))+
geom_jitter(height=0)
# + facet_wrap(~species+sex)+
+ facet_grid(species~sex)+
labs(x='Parameter', y='Result [log10(mm or g)]')+
theme_light()+
theme(axis.text.x = element_text(angle = 90),
strip.text =element_text(colour = 'black'),
strip.background = element_rect(fill='skyblue'))
)
(ggplot(pengiuns ,
aes(x=parameter, y=result, colour=year ))+
geom_jitter(height=0)
# + facet_wrap(~species+sex)+
+ facet_grid(species~sex)+
labs(x='Parameter', y='Result [log10(mm or g)]')+
theme_light()+
theme(axis.text.x = element_text(angle = 90),
strip.text =element_text(colour = 'black'),
strip.background = element_rect(fill='skyblue'))
)
pengiuns <- palmerDemo %>%
pivot_longer(-c(island, sex, year, species),
names_to = 'parameter',
values_to = 'result') %>%
dplyr::mutate(parameter=gsub('bill_|_mm|_g', '', parameter),
parameter=case_when(grepl('flipper', parameter)~'flipper',
grepl('body', parameter)~'bodymass',
TRUE~parameter),
parameter=factor(parameter, levels=c( 'depth', 'length', 'flipper', 'bodymass' )
),
result=log10(result),
year=factor(year)
) %>%
dplyr::filter(!is.na(result))
pengiuns <- pengiuns %>%
pivot_longer(-c(island, sex, year, species),
names_to = 'parameter',
values_to = 'result') %>%
dplyr::mutate(parameter=gsub('bill_|_mm|_g', '', parameter),
parameter=case_when(grepl('flipper', parameter)~'flipper',
grepl('body', parameter)~'bodymass',
TRUE~parameter),
parameter=factor(parameter, levels=c( 'depth', 'length', 'flipper', 'bodymass' )
),
result=log10(result),
year=factor(year)
) %>%
dplyr::filter(!is.na(result))
View(pengiuns)
(ggplot(pengiuns ,
aes(x=parameter, y=result, colour=year ))+
geom_jitter(height=0)
# + facet_wrap(~species+sex)+
+ facet_grid(species~sex)+
labs(x='Parameter', y='Result [log10(mm or g)]')+
theme_light()+
theme(axis.text.x = element_text(angle = 90),
strip.text =element_text(colour = 'black'),
strip.background = element_rect(fill='skyblue'))
)
detach("package:base", unload = TRUE)
install.packages("lmtest")
install.packages("lmtest")
install.packages("epiDisplay")
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("kableExtra")
install.packages("tinytex")
wts < - c(3.5,2.8,1.9,3.1,4.5,4.8,3.2,2.9)
Sample1 <- rnorm(1000,0,1)
Sample1
mean(Sample1)
var(Sample1)
hist(Sample1)
hist(Sample1,nclass=50)
Sample1 <- data.frame(Sample1)
hist(Sample1)
hist(Sample1)
hist(Sample1,nclass=50)
hist(Sample1,nclass=50,xlim=c(-4,4))
par(mfrow=c(2,1))
hist(Sample1,nclass=50,xlim=c(-4,4))
hist(Sample2,nclass=50,xlim=c(-4,4))
par(mfrow=c(2,1))
Sample2<-rnorm(1000,1,1)
hist(Sample1,nclass=50,xlim=c(-4,4))
par(mfrow=c(2,1))
hist(Sample1,nclass=50,xlim=c(-4,4))
par(mfrow=c(1,2))
Sample2<-rnorm(1000,1,1)
par(mfrow=c(1,2))
hist(Sample1,nclass=50,xlim=c(-4,4))
hist(Sample1,nclass=50,xlim=c(-4,4))
Sample2 <- data.frame(Sample2)
##Simple arithmetic simulations
x <- 1:5
Sample2<-rnorm(1000,1,1)
par(mfrow=c(1,2))
hist(Sample1,nclass=50,xlim=c(-4,4))
######################################################################################
##Simulate a random sample of 100, with mean 0, and standard deviation 1
Sample1 <- rnorm(1000,0,1)
Sample1
mean(Sample1)
var(Sample1)
hist(Sample1)
hist(Sample1,nclass=50)
Sample1 <- data.frame(Sample1)
##Compare same samples with different assumptions
Sample2<-rnorm(1000,1,1)
par(mfrow=c(1,2))
hist(Sample1,nclass=50,xlim=c(-4,4))
View(Sample1)
hist(Sample1$Sample1,nclass=50,xlim=c(-4,4))
hist(Sample2,nclass=50,xlim=c(-4,4))
##Compare same samples with different assumptions
Sample2<-rnorm(1000,1,1)
par(mfrow=c(1,2))
hist(Sample1$Sample1,nclass=50,xlim=c(-4,4))
hist(Sample2,nclass=50,xlim=c(-4,4))
Sample2 <- data.frame(Sample2)
View(Sample1)
hist(Sample1$Sample1,nclass=50,xlim=c(-4,4))
hist(Sample1$Sample1,nclass=50,xlim=c(-4,4))
View(Sample1)
View(Sample1)
##Compare same samples with different assumptions
Sample2<-rnorm(1000,1,1)
par(mfrow=c(1,2))
hist(Sample1$Sample1,nclass=50,xlim=c(-4,4))
hist(Sample2,nclass=50,xlim=c(-4,4))
# Categorical- random number
Cat2 <- sample(1:4,n,rep=TRUE,prob=c(0.25,0.25,0.25,0.25))
# Categorical- random number
Cat2 <- sample(1:4,n,rep=TRUE,prob=c(0.25,0.25,0.25,0.25))
summary(Cat2)
prop.table(table(Cat2))
Cat2 <- sample(1:4,n,rep=TRUE,prob=c(0.25,0.25,0.25,0.25))
rm(list = ls())
set.seed(123456789)
nsim <- 2 #Number of datasets to be generated
N_list <- c(50, 300,2000,5000,10000)       # Number of observations per dataset.
b0_list <- c(-1.280) # values for the "b0"  (constant)
beta1 <- -0.005 # value of the "b1" effect (regression coefficient for age)
beta2 <- 0.350 # value of the "b2" effect (regression coefficient for sex)
beta3 <- -0.2 # value of the "b3" effect (regression coefficient for HIVKnowledge )
beta4 <- -0.2 # value of the "b4" effect (regression coefficient for education level)
beta5 <- 0.636 # value of the "b6" effect (regression coefficient for residence)
critval <- 1.96 # approx 95% Confidence Interval
p.pred <- numeric(nimp)
rm(list = ls())
set.seed(123456789)
nsim <- 2 #Number of datasets to be generated
N_list <- c(50, 300,2000,5000,10000)       # Number of observations per dataset.
b0_list <- c(-1.280) # values for the "b0"  (constant)
beta1 <- -0.005 # value of the "b1" effect (regression coefficient for age)
beta2 <- 0.350 # value of the "b2" effect (regression coefficient for sex)
beta3 <- -0.2 # value of the "b3" effect (regression coefficient for HIVKnowledge )
beta4 <- -0.2 # value of the "b4" effect (regression coefficient for education level)
beta5 <- 0.636 # value of the "b6" effect (regression coefficient for residence)
critval <- 1.96 # approx 95% Confidence Interval
p.pred <- numeric(nsim)
p.pred2 <- numeric(nsim)
rm(list = ls())
set.seed(123456789)
nsim <- 2 #Number of datasets to be generated
N_list <- c(50, 300,2000,5000,10000)       # Number of observations per dataset.
b0_list <- c(-1.280) # values for the "b0"  (constant)
beta1 <- -0.005 # value of the "b1" effect (regression coefficient for age)
beta2 <- 0.350 # value of the "b2" effect (regression coefficient for sex)
beta3 <- -0.2 # value of the "b3" effect (regression coefficient for HIVKnowledge )
beta4 <- -0.2 # value of the "b4" effect (regression coefficient for education level)
beta5 <- 0.636 # value of the "b6" effect (regression coefficient for residence)
critval <- 1.96 # approx 95% Confidence Interval
p.pred <- numeric(nsim)
p.pred2 <- numeric(nsim)
rm(list = ls())
set.seed(123456789)
nsim <- 2 #Number of datasets to be generated
N_list <- c(50, 300,2000,5000,10000)       # Number of observations per dataset.
b0_list <- c(-1.280) # values for the "b0"  (constant)
beta1 <- -0.005 # value of the "b1" effect (regression coefficient for age)
beta2 <- 0.350 # value of the "b2" effect (regression coefficient for sex)
beta3 <- -0.2 # value of the "b3" effect (regression coefficient for HIVKnowledge )
beta4 <- -0.2 # value of the "b4" effect (regression coefficient for education level)
beta5 <- 0.636 # value of the "b6" effect (regression coefficient for residence)
critval <- 1.96 # approx 95% Confidence Interval
p.pred <- numeric(nsim)
p.pred2 <- numeric(nsim)
p.pred2 <- numeric(nimp)
p.pred2 <- numeric(nimp)
# Generate data
# loop through all of the "N" sizes specified above
for (iN in N_list){
# N values of the covariate age
x1_cov <-  round(runif(iN, min = 14, max = 50), 0)
# N values of the covariate sex
x2_cov <- rbinom(iN, size = 1, prob = 0.5)
# N values of the covariate HIVKnowledge
x3_cov <- sample(1:4,iN,rep=TRUE,prob=c(0.25,0.25,0.25,0.25))
# N values of the covariate education
x4_cov <- sample(1:4,iN,rep=TRUE,prob=c(0.2,0.5,0.25,0.05))
# N values of the covariate residence
x5_cov <- rbinom(iN,size=1,0.6)
}
dat <- as.data.frame(matrix(0, iN, 7))
for (ib0 in b0_list){
# loop through all of the "b0" effects specified above
res <- numeric(5) # initialize a vector to store the results
res.cd  <- numeric(4)
cd.prev2 <- 0
for (ib0 in b0_list){
# loop through all of the "b0" effects specified above
res <- numeric(5) # initialize a vector to store the results
res.cd  <- numeric(4)
cd.prev2 <- 0
for (ins in 1:nsim){
print(ins)
# loop to replicate simulated datasets within iterations
for (i in 1:iN) {
x1 <-  x1_cov[i]
x2 <-  x2_cov[i]
x3 <-  x3_cov[i]
x4 <-  x4_cov[i]
x5 <-  x5_cov[i]
y <-   rbinom(1, size = 1, prob = p1(x1 = x1, x2 = x2, x3 = x3, x4 = x4, beta0 = ib0,
beta1 = beta1, beta2 = beta2, beta3 = beta3, beta4 = beta4))
dat[i, ] <- c(i, x2, x1, x3, x4, x5, y)
full.data <- cbind(ins, ib0, dat, iN)
}
names(full.data) <- c("iterations","intercept","idno","sex","age","HIVKnow","education","residence","HIVStatus","n")
full.data2 <- rbind(full.data2, full.data)
studentdta=data.frame(idno=1:10,
mathscore=round(rnorm(10, 60,3)))
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 60,3)))
View(studentdata)
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,3)))
View(studentdata)
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
View(studentdata)
for(i in 1:10){
if(studentdata[i,mathscore]>40){
cat('Student passed')
}else{
cat('Student failed')
}
}
if(studentdata[i,'mathscore']>40){
cat('Student passed')
}else{
cat('Student failed')
}
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat('Student passed')
}else{
cat('Student failed')
}
}
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
set.seed(123456789)
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
set.seed(123456789)
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
set.seed(123456789)
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
set.seed(123456789)
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
set.seed(123456789)
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
set.seed(123456789)
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
set.seed(123456789)
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
set.seed(123456789)
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
set.seed(123456789)
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
set.seed(123456789)
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
set.seed(123456789)
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
set.seed(123456789)
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
studentdata=data.frame(idno=1:10,
mathscore=round(rnorm(10, 40,10)))
for(i in 1:10){
if(studentdata[i,'mathscore']>40){
cat(paste('Student', i, ' passed\n'))
}else{
cat(paste('Student', i, 'failed\n'))
}
}
mylogit1 <- glm(birthwt_below_2500  ~ mother_age, data = lbw, family = binomial (link='logit'))
mylogit1 <- glm(birthwt_below_2500  ~ mother_age, data = lbw, family = binomial (link='logit'))
confint(mylogit)
confint.default(mylogit)
library(aod)
wald.test(b = coef(multiple), Sigma = vcov(multiple), Terms = 3:4)
blorr::blr_model_fit_stats(multiple)
rm(list=ls())
rm_new <- read.csv("rat_weight.csv")
rm(list=ls())
rm_new <- read.csv("rat_weight.csv")
rm(list=ls())
rm_new <- read.csv("rat_weight.csv")
rm_new$Diet <- factor(rm_new$Diet, levels = c(1,2,3),
labels = c("Control", "Low fat", "High fat"))
nlevels(rm_new$Diet)
levels(rm_new$Diet)
rm_new <- read.csv("rat_weight.csv")
